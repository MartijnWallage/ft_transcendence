# DATABASE CONFIGURATION
POSTGRES_USER=demo
POSTGRES_PASSWORD=demo
POSTGRES_DB=demo
POSTGRES_PORT=5432

SECRET_KEY=foo
DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 144.126.245.86 159.89.8.55 10.15.203.3 10.15.109.3 [::1] djangoapp #both IPv4 and IPv6 localhost
DJANGO_SUPERUSER_USERNAME=admin
DJANGO_SUPERUSER_EMAIL=admin@pong.com
DJANGO_SUPERUSER_PASSWORD=mysupersecurepassword

# # OAUTH CONFIGURATION - localhost
# ## You must sychronize the CLIENT_ID and CLIENT_SECRET from the 42OAuth provider and set it here with srcs/frontend/.env
# CLIENT_ID = u-s4t2ud-0f605dab356f53b97f60db2a5b5d6a1c102b0ad2a94b1719c1becd32e46a3209
# CLIENT_SECRET = 
# REDIRECT_URI = https://localhost/oauth
# MAIN_URL = https://localhost


# # DJANGO CONFIGURATION
DJANGO_INITIAL_SETUP = false  # Set to true or false

# # Django secret key example
# DJANGO_SECRET_KEY='django-insecure-*vko47^b1o*3sy=$9e$sbzh3curt4g@%o04m7o390)+=@aaq5r'

# # WEB3 CONFIGURATION nessary
# CHAIN_ID=5 
# ##If you don't have blockchain env, it's okay. But you can't check tournament log based on blockchain.
# WEB3_PROVIDER= 
# MY_ADDRESS= 
# PRIVATE_OWNER_KEY=

# BLOCKCHAIN CONFIGURATION
SMART_CONTRACT_ADDRESS=0x47B6919de3AF7FFE9e23da1201fAFeb8557C4B32
PRIVATE_KEY=
ALCHEMY_API_KEY=